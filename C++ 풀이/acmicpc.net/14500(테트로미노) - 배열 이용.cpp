#include <iostream>
#include <algorithm>

using namespace std;

int tetroMap[500][500] = { {0} };

int tetro[19][4][2] = {
	{ {0,0},{0,1},{0,2},{0,3} },
	{ {0,0},{1,0},{2,0},{3,0} },
	// ㅡ
	{ {0,0},{0,1},{1,0},{1,1} },
	// ㅁ
	{ {0,0},{0,1},{1,0},{2,0} },
	{ {0,0},{1,0},{1,1},{1,2} },
	{ {0,0},{0,1},{-1,1},{-2,1}},
	{ {0,0},{0,1},{0,2},{1,2} },
	// ㄴ
	{ {0,0},{0,1},{1,1},{2,1} },
	{ {0,0},{0,1},{0,2},{-1,2} },
	{ {0,0},{1,0},{2,0},{2,1} },
	{ {0,0},{0,1},{0,2},{1,0} },
	// y대칭 ㄴ
	{ {1,0},{0,0},{0,1},{-1,1} },
	{ {0,0},{0,1},{1,1},{1,2} },
	// ㄹ
	{ {-1,0},{0,0},{0,1},{1,1} },
	{ {0,0},{0,1},{-1,1},{-1,2} },
	// y대칭 ㄹ
	{ {0,0},{0,1},{0,2},{-1,1} },
	{ {1,1},{0,0},{0,1},{-1,1} },
	{ {0,0},{0,1},{0,2},{1,1} },
	{ {0,0},{1,0},{1,1},{2,0} }
	//ㅏ
};

int main() {

	cin.tie(NULL);
	cout.tie(NULL);
	ios::sync_with_stdio(false);

	int N, M;
	cin >> N >> M;

	int i, j,ans=0;

	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			cin >> tetroMap[i][j];
		}
	}

	int y, x,t;

	for (i = 0; i < 19; i++) {
		for (y = 0; y < N; y++) {
			for (x = 0; x < M; x++) {
				int sum = 0;
				for (t = 0; t < 4; t++) {
					int yPos = y + tetro[i][t][0];
					int xPos = x + tetro[i][t][1];

					if (yPos < 0 || xPos < 0 || yPos >= N || xPos >= M) {
						sum = 0;
						break;
					}
					sum += tetroMap[yPos][xPos];

				}

				ans = max(sum, ans);
			}
		}

	}

	cout << ans;
	return 0;

	
}

//직접 푼 버전